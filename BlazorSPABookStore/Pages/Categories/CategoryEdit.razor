@page "/categoryedit"
@page "/categoryedit/{CategoryId:int}"
@using BlazorSPABookStore.Interfaces
@using BlazorSPABookStore.Models
@using Blazored.Toast.Configuration
@inject IToastService ToastService

<section class="category-edit text-center">
    <h1 class="page-title">@Title</h1>

    <EditForm Model="@Category" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>

        <div class="form-group row justify-content-center">
            <label for="name" class="col-form-label">Name: </label>
            <div class="col-sm-8 col-md-5">
                <InputText id="category" class="form-control" @bind-Value="@Category.Name" placeholder="Category"></InputText>
                <ValidationMessage For="@(() => Category.Name)" />
            </div>
        </div>

        <button type="submit" class="btn btn-success mr-2">Save category</button>

        <button class="btn btn-info" type="submit" @onclick="@NavigateToCategoriesPage">Back</button>
    </EditForm>
</section>

@code {
    [Parameter]
    public int CategoryId { get; set; }

    [Inject]
    public ICategoryService CategoryService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    public Category Category { get; set; } = new Category();

    protected string Title = "Add new Category";

    protected override async Task OnInitializedAsync()
    {
        if (CategoryId != 0)
        {
            Category = await CategoryService.GetById(CategoryId);

            var category = await CategoryService.GetById(CategoryId);

            if (category != null)
            {
                Category = category;
                Title = $"Edit {Category.Name}";
            }
            else
            {
                Category = new Category();
                ToastService.ShowError("Something went wrong while loading the category.");
            }
        }
    }

    protected async Task HandleValidSubmit()
    {
        if (Category.Id == 0)
            await AddCategory();
        else
            await UpdateCategory();
    }

    private async Task AddCategory()
    {
        var result = await CategoryService.Add(Category);
        if (result != null)
        {
            ToastService.ShowSuccess("The category was successfully added.");
            NavigateToCategoriesPage();
        }
        else
        {
            ToastService.ShowError("Something went wrong while adding the category. Please try again.");
        }
    }

    private async Task UpdateCategory()
    {
        var result = await CategoryService.Update(Category);
        if (result)
        {
            ToastService.ShowSuccess("The category was successfully updated.");
            NavigateToCategoriesPage();
        }
        else
        {
            ToastService.ShowError("Something went wrong while updating the category. Please try again.");
        }
    }

    private void NavigateToCategoriesPage()
    {
        NavigationManager.NavigateTo("/categories");
    }
}